"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.destroyAllDataPermanently = destroyAllDataPermanently;
var _cache = _interopRequireDefault(require("./cache"));
var _SchemaCache = _interopRequireDefault(require("./Adapters/Cache/SchemaCache"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/**
 * Destroys all data in the database
 * @param {boolean} fast set to true if it's ok to just drop objects and not indexes.
 */
function destroyAllDataPermanently(fast) {
  if (!process.env.TESTING) {
    throw 'Only supported in test environment';
  }
  return Promise.all(Object.keys(_cache.default.cache).map(appId => {
    const app = _cache.default.get(appId);
    const deletePromises = [];
    if (app.cacheAdapter) {
      deletePromises.push(app.cacheAdapter.clear());
    }
    if (app.databaseController) {
      deletePromises.push(app.databaseController.deleteEverything(fast));
    } else if (app.databaseAdapter) {
      _SchemaCache.default.clear();
      deletePromises.push(app.databaseAdapter.deleteAllClasses(fast));
    }
    return Promise.all(deletePromises);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXN0cm95QWxsRGF0YVBlcm1hbmVudGx5IiwiZmFzdCIsInByb2Nlc3MiLCJlbnYiLCJURVNUSU5HIiwiUHJvbWlzZSIsImFsbCIsIk9iamVjdCIsImtleXMiLCJBcHBDYWNoZSIsImNhY2hlIiwibWFwIiwiYXBwSWQiLCJhcHAiLCJnZXQiLCJkZWxldGVQcm9taXNlcyIsImNhY2hlQWRhcHRlciIsInB1c2giLCJjbGVhciIsImRhdGFiYXNlQ29udHJvbGxlciIsImRlbGV0ZUV2ZXJ5dGhpbmciLCJkYXRhYmFzZUFkYXB0ZXIiLCJTY2hlbWFDYWNoZSIsImRlbGV0ZUFsbENsYXNzZXMiXSwic291cmNlcyI6WyIuLi9zcmMvVGVzdFV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBcHBDYWNoZSBmcm9tICcuL2NhY2hlJztcbmltcG9ydCBTY2hlbWFDYWNoZSBmcm9tICcuL0FkYXB0ZXJzL0NhY2hlL1NjaGVtYUNhY2hlJztcblxuLyoqXG4gKiBEZXN0cm95cyBhbGwgZGF0YSBpbiB0aGUgZGF0YWJhc2VcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gZmFzdCBzZXQgdG8gdHJ1ZSBpZiBpdCdzIG9rIHRvIGp1c3QgZHJvcCBvYmplY3RzIGFuZCBub3QgaW5kZXhlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlc3Ryb3lBbGxEYXRhUGVybWFuZW50bHkoZmFzdCkge1xuICBpZiAoIXByb2Nlc3MuZW52LlRFU1RJTkcpIHtcbiAgICB0aHJvdyAnT25seSBzdXBwb3J0ZWQgaW4gdGVzdCBlbnZpcm9ubWVudCc7XG4gIH1cbiAgcmV0dXJuIFByb21pc2UuYWxsKFxuICAgIE9iamVjdC5rZXlzKEFwcENhY2hlLmNhY2hlKS5tYXAoYXBwSWQgPT4ge1xuICAgICAgY29uc3QgYXBwID0gQXBwQ2FjaGUuZ2V0KGFwcElkKTtcbiAgICAgIGNvbnN0IGRlbGV0ZVByb21pc2VzID0gW107XG4gICAgICBpZiAoYXBwLmNhY2hlQWRhcHRlcikge1xuICAgICAgICBkZWxldGVQcm9taXNlcy5wdXNoKGFwcC5jYWNoZUFkYXB0ZXIuY2xlYXIoKSk7XG4gICAgICB9XG4gICAgICBpZiAoYXBwLmRhdGFiYXNlQ29udHJvbGxlcikge1xuICAgICAgICBkZWxldGVQcm9taXNlcy5wdXNoKGFwcC5kYXRhYmFzZUNvbnRyb2xsZXIuZGVsZXRlRXZlcnl0aGluZyhmYXN0KSk7XG4gICAgICB9IGVsc2UgaWYgKGFwcC5kYXRhYmFzZUFkYXB0ZXIpIHtcbiAgICAgICAgU2NoZW1hQ2FjaGUuY2xlYXIoKTtcbiAgICAgICAgZGVsZXRlUHJvbWlzZXMucHVzaChhcHAuZGF0YWJhc2VBZGFwdGVyLmRlbGV0ZUFsbENsYXNzZXMoZmFzdCkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKGRlbGV0ZVByb21pc2VzKTtcbiAgICB9KVxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQXVEO0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EseUJBQXlCLENBQUNDLElBQUksRUFBRTtFQUM5QyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxPQUFPLEVBQUU7SUFDeEIsTUFBTSxvQ0FBb0M7RUFDNUM7RUFDQSxPQUFPQyxPQUFPLENBQUNDLEdBQUcsQ0FDaEJDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDQyxjQUFRLENBQUNDLEtBQUssQ0FBQyxDQUFDQyxHQUFHLENBQUNDLEtBQUssSUFBSTtJQUN2QyxNQUFNQyxHQUFHLEdBQUdKLGNBQVEsQ0FBQ0ssR0FBRyxDQUFDRixLQUFLLENBQUM7SUFDL0IsTUFBTUcsY0FBYyxHQUFHLEVBQUU7SUFDekIsSUFBSUYsR0FBRyxDQUFDRyxZQUFZLEVBQUU7TUFDcEJELGNBQWMsQ0FBQ0UsSUFBSSxDQUFDSixHQUFHLENBQUNHLFlBQVksQ0FBQ0UsS0FBSyxFQUFFLENBQUM7SUFDL0M7SUFDQSxJQUFJTCxHQUFHLENBQUNNLGtCQUFrQixFQUFFO01BQzFCSixjQUFjLENBQUNFLElBQUksQ0FBQ0osR0FBRyxDQUFDTSxrQkFBa0IsQ0FBQ0MsZ0JBQWdCLENBQUNuQixJQUFJLENBQUMsQ0FBQztJQUNwRSxDQUFDLE1BQU0sSUFBSVksR0FBRyxDQUFDUSxlQUFlLEVBQUU7TUFDOUJDLG9CQUFXLENBQUNKLEtBQUssRUFBRTtNQUNuQkgsY0FBYyxDQUFDRSxJQUFJLENBQUNKLEdBQUcsQ0FBQ1EsZUFBZSxDQUFDRSxnQkFBZ0IsQ0FBQ3RCLElBQUksQ0FBQyxDQUFDO0lBQ2pFO0lBQ0EsT0FBT0ksT0FBTyxDQUFDQyxHQUFHLENBQUNTLGNBQWMsQ0FBQztFQUNwQyxDQUFDLENBQUMsQ0FDSDtBQUNIIn0=